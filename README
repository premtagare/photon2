Kernel Development:
-------------------
1. Defining and Loading GDT.



Bootloader Development:
-----------------------
1. Stage 1 Bootloader is copied into MBR starting from address 0x3E
This will parse FAT12 filesystem and loads Stage 2 Bootloader from floppy and places it at adress 0x10000 in RAM.
*loadk.s and loadk.bin are just stub, these will be replaced with Stage 2 Bootloader code in the next version.

2. Stage 2 Bootloader(loadk.s) copies kernel from floppy to RAM. Kernel image is placed at location 0x100000.
Bootloader switches to protected mode and jumps to execute kernel.

3. Stage 2 Bootloader(loadk.s) parses kernel ELF binary and loads executable at exact location in RAM.
Jumps to entry point in kernel.


Compile:
--------
Run the following commands to compile and boot photon2,
make in src folder
./run


Note:
creating new floppy image:
$ dd bs=512 count=2880 if=/dev/zero of=imagefile.img
$ mkfs.msdos imagefile.img


*** Extraordinary Techniques:

1. To take snapshot of RAM, press ctrl+alt+2 while QEMU is runnning and use the following command
   pmemsave starting_address end_address file
   eg: pmemsave 0 0x20000 RAM.dump

2. Debugging kernel through GDB
    use "#sudo qemu -fda /dev/loop0 -S -gdb tcp::5022" instead of "sudo qemu -fda /dev/loop0" in system_boot.sh
    after executing ./run open another terminal and cd to src/kernel
    Execute command "gdbtui kernel.bin" which opens gdb prompt
    connect to QEMU by typing "target extended-remote:5022"
    Now set the break points eg: "break main"
    continue "c" to debug kernel.
